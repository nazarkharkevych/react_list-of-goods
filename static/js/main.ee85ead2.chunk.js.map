{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortAlphabetically","setState","ALPHABET","sortByLength","LENGTH","reverse","reset","goods","visibleGoods","sort","a","b","localeCompare","length","getReorderedGoods","this","sortedAlphabetically","sortedByLength","reversed","showReset","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAhBzB,EAoBES,MAAQ,WACN,EAAKL,SAAS,CAAEJ,YAAY,EAAOC,SAAUL,EAASM,QArB1D,4CAwBE,WACE,IAAMQ,EAzDH,SACLA,EADK,GAGJ,IADCT,EACF,EADEA,SAAUD,EACZ,EADYA,WAENW,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQb,GACN,KAAKL,EAASS,SACZ,OAAOQ,EAAEE,cAAcD,GAEzB,KAAKlB,EAASW,OACZ,OAAOM,EAAEG,OAASF,EAAEE,OAEtB,KAAKpB,EAASM,KACd,QACE,OAAO,MAITF,GACFW,EAAaH,UAGRG,EAiCSM,CAAkBpB,EAAiBqB,KAAKnB,OAEtD,EAAiCmB,KAAKnB,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZmB,EAAuBlB,IAAaL,EAASS,SAC/C,GACA,WAEEe,EAAiBnB,IAAaL,EAASW,OACzC,GACA,WAEEc,EAAWrB,EACb,GACA,WAEEsB,EAAYtB,GAAcC,IAAaL,EAASM,KAEtD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBJ,GAC7BM,QAASP,KAAKf,mBAHhB,iCAQA,wBACEqB,KAAK,SACLD,UAAS,4BAAuBH,GAChCK,QAASP,KAAKZ,aAHhB,4BAQA,wBACEkB,KAAK,SACLD,UAAS,4BAAuBF,GAChCI,QAASP,KAAKV,QAHhB,qBAQCc,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAASP,KAAKT,MAHhB,sBAUJ,6BACE,6BACGC,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBApFvB,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ee85ead2.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b): number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    const { sortType, isReversed } = this.state;\n\n    const sortedAlphabetically = sortType === SortType.ALPHABET\n      ? ''\n      : 'is-light';\n\n    const sortedByLength = sortType === SortType.LENGTH\n      ? ''\n      : 'is-light';\n\n    const reversed = isReversed\n      ? ''\n      : 'is-light';\n\n    const showReset = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortedAlphabetically}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortedByLength}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${reversed}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {showReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li key={good} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}